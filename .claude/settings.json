{
  "permissions": {
    "allow": [
      // Azure CLI commands
      "Bash(az account show:*)",
      "Bash(az acr credential show:*)",
      "Bash(az acr list:*)",
      "Bash(az acr repository show-tags:*)",
      "Bash(az cognitiveservices account keys list:*)",
      "Bash(az containerapp env certificate list:*)",
      "Bash(az containerapp env list:*)",
      "Bash(az containerapp hostname add:*)",
      "Bash(az containerapp hostname bind:*)",
      "Bash(az containerapp list:*)",
      "Bash(az containerapp logs show:*)",
      "Bash(az containerapp show:*)",
      "Bash(az group list:*)",
      "Bash(az redis list:*)",
      "Bash(az redis list-keys:*)",
      "Bash(az redis show:*)",
      "Bash(az resource list:*)",
      "Bash(az sql server firewall-rule create:*)",
      "Bash(az sql server firewall-rule list:*)",
      "Bash(az storage account keys list:*)",
      "Bash(az storage account list:*)",
      "Bash(az storage container list:*)",

      // Basic system commands
      "Bash(awk:*)",
      "Bash(cat:*)",
      "Bash(cp:*)",
      "Bash(curl:*)",
      "Bash(cut:*)",
      "Bash(dig:*)",
      "Bash(do)",
      "Bash(done)",
      "Bash(ffmpeg:*)",
      "Bash(find:*)",
      "Bash(for:*)",
      "Bash(grep:*)",
      "Bash(kill:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(nslookup:*)",
      "Bash(pkill:*)",
      "Bash(rm:*)",
      "Bash(sed:*)",
      "Bash(sort:*)",
      "Bash(touch:*)",
      "Bash(tree:*)",

      // Package managers
      "Bash(brew install:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",

      // Container/virtualization
      "Bash(colima start:*)",
      "Bash(docker build:*)",
      "Bash(docker push:*)",
      "Bash(docker rm:*)",
      "Bash(docker run:*)",
      "Bash(docker stop:*)",

      // Git commands
      "Bash(git add:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(git pull:*)",
      "Bash(git push:*)",
      "Bash(git reset:*)",

      // GitHub CLI
      "Bash(gh api:*)",
      "Bash(gh issue create:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh repo view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh secret set:*)",
      "Bash(gh workflow:*)",

      // UV package manager
      "Bash(uv add:*)",
      "Bash(uv export:*)",
      "Bash(uv init:*)",
      "Bash(uv lock:*)",
      "Bash(uv pip:*)",
      "Bash(uv run flask:*)",
      "Bash(uv run ingen:*)",
      "Bash(uv run mkdocs build:*)",
      "Bash(uv run mkdocs serve:*)",
      "Bash(uv run mypy:*)",
      "Bash(uv run pip-audit:*)",
      "Bash(uv run pre-commit run:*)",
      "Bash(uv run pytest:*)",
      "Bash(uv run ruff check:*)",
      "Bash(uv run:*)",
      "Bash(uv search:*)",
      "Bash(uv sync:*)",
      "Bash(uv tree:*)",

      // MCP IDE
      "mcp__ide__getDiagnostics",

      // MCP Playwright
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_file_upload",
      "mcp__playwright__browser_fill_form",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_network_requests",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_select_option",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_tabs",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_wait_for",

      // Web services
      "WebFetch(domain:blog.insight-services-apac.dev)",
      "WebFetch(domain:brandfetch.com)",
      "WebFetch(domain:docs.astral.sh)",
      "WebFetch(domain:github.com)",
      "WebSearch"
    ],
    "deny": []
  }
}